version: "3.9"
services: 

  ros:
    container_name: ros
    build: 
      context: .  # 현재 디렉토리
      dockerfile: Dockerfile  
    volumes:
      - ./${WORKSPACE}:${USERHOME}/${WORKSPACE}   # 현재 디렉토리 기본으로 연결 //원하는 경로로 바꿀 수 있음
      - ~/.ssh:${USERHOME}/.ssh  # 홈디렉토리에 있는 .ssh 연결
      - /tmp/.X11-unix:/tmp/.X11-unix   # 디스플레이 연결 (GUI 프로그램 실행하기 위해)
      - /dev:/dev  #usb등의 장치 연결
    ports:
      - "11311:11311" #ros
      - "9090:9090" #rosbridge
      - "11315:11315" #web_video
    command: 
      ["bash", "-c", "source ${USERHOME}/${WORKSPACE}/devel/setup.bash && roslaunch ${ROS_PACKAGE} ${ROS_LAUNCH_FILE}"]
      # - roscore  ## dev 경우 사용
    restart: always
    stdin_open: true
    privileged: true
    tty: true
    devices:
      - /dev:/dev
    group_add:
      - video
    environment:
      - ROS_MASTER_URI=http://localhost:11311
      - DISPLAY=$DISPLAY

  web:
    image: nginx:latest
    container_name: nginx
    ports: 
      - "${WEB_PORT}:80"
    volumes: 
        - ./nginx_conf/default.conf:/etc/nginx/conf.d/default.conf  ## 서버배포시에는 prod ##로컬 개발시는 dev (env)
        - ./web_src:/var/www/html  # app 디렉토리도 생성한다해서 도커 nginx 서버와 매칭
    restart: always
    depends_on:
      - php
  
  php:
    # image: php:fpm #이렇게만 적으면 가장 최신버전을 받는다. Dockerfile 에서 받는다 
    container_name: php
    volumes:
      - ./web_src:/var/www/html  #이제 php를 app 디렉토리로 연결
    build:  # 위의 image는 제거
      context: .  # 현재 디렉토리
      dockerfile: php.Dockerfile  
    restart: always
    ports: 
      - "9000:9000"

## xhost +가 필요할 수도 있음
